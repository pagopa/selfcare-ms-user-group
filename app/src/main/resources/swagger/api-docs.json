{
  "openapi": "3.0.3",
  "info": {
    "title": "selc-user-group",
    "description": "The services described in this section deal with the management of UserGroup entity, providing the necessary  methods for its creation, consultation and activation.",
    "version": "1.0-SNAPSHOT"
  },
  "servers": [
    {
      "url": "http://localhost:80",
      "description": "Inferred Url"
    }
  ],
  "tags": [
    {
      "name": "user-group",
      "description": "User group endpoint CRUD operations"
    }
  ],
  "paths": {
    "/user-groups/v1/": {
      "get": {
        "tags": [
          "user-group"
        ],
        "summary": "getUserGroups",
        "description": "Service that allows to get a list of UserGroup entities",
        "operationId": "getUserGroupsUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "query",
            "description": "Users group's institutionId",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve (0..N)",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Users group's productId",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Member's unique identifier",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroupResource"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "user-group"
        ],
        "summary": "createGroup",
        "description": "Service that allows the insert of a new occurrence for the UserGroup entity",
        "operationId": "createGroupUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserGroupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupResource"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/user-groups/v1/{id}": {
      "get": {
        "tags": [
          "user-group"
        ],
        "summary": "getUserGroup",
        "description": "Service to get a specific UserGroup entity",
        "operationId": "getUserGroupUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Users group's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupResource"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "user-group"
        ],
        "summary": "updateUserGroup",
        "description": "Service that allows the modification of a specific occurrence for the UserGroup entity by an Admin user",
        "operationId": "updateUserGroupUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Users group's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupResource"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "user-group"
        ],
        "summary": "deleteGroup",
        "description": "Service that allows the deletion of a specific occurrence for the UserGroup entity by an Admin user",
        "operationId": "deleteGroupUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Users group's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/user-groups/v1/{id}/activate": {
      "post": {
        "tags": [
          "user-group"
        ],
        "summary": "activateGroup",
        "description": "Service that allows the activation of a specific occurrence for the UserGroup entity by an Admin user",
        "operationId": "activateGroupUsingPOST",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Users group's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/user-groups/v1/{id}/members/{userId}": {
      "put": {
        "tags": [
          "user-group"
        ],
        "summary": "addMemberToUserGroup",
        "description": "Service to add a member to a specific UserGroup entity",
        "operationId": "addMemberToUserGroupUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Users group's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "${swagger.dashboard.user.model.id}",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/user-groups/v1/{id}/suspend": {
      "post": {
        "tags": [
          "user-group"
        ],
        "summary": "suspendGroup",
        "description": "Service that allows the suspension of a specific occurrence for the UserGroup entity by an Admin user",
        "operationId": "suspendGroupUsingPOST",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Users group's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/user-groups/v1/{userGroupId}/members/{memberId}": {
      "delete": {
        "tags": [
          "user-group"
        ],
        "summary": "deleteMemberFromUserGroup",
        "description": "Service to delete a member from a specific UserGroup entity",
        "operationId": "deleteMemberFromUserGroupUsingDELETE",
        "parameters": [
          {
            "name": "userGroupId",
            "in": "path",
            "description": "Users group's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "Member's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CreateUserGroupDto": {
        "title": "CreateUserGroupDto",
        "required": [
          "description",
          "institutionId",
          "members",
          "name",
          "productId",
          "status"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Users group's description"
          },
          "institutionId": {
            "type": "string",
            "description": "Users group's institutionId"
          },
          "members": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of all the members of the group",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "name": {
            "type": "string",
            "description": "Users group's name"
          },
          "productId": {
            "type": "string",
            "description": "Users group's productId"
          },
          "status": {
            "type": "string",
            "description": "Users group's status",
            "enum": [
              "ACTIVE",
              "SUSPENDED"
            ]
          }
        }
      },
      "UpdateUserGroupDto": {
        "title": "UpdateUserGroupDto",
        "required": [
          "description",
          "members",
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Users group's description"
          },
          "members": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of all the members of the group",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "name": {
            "type": "string",
            "description": "Users group's name"
          }
        }
      },
      "UserGroupResource": {
        "title": "UserGroupResource",
        "required": [
          "description",
          "id",
          "institutionId",
          "members",
          "name",
          "productId",
          "status"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Date on which the group was created",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "User by which the group was created"
          },
          "description": {
            "type": "string",
            "description": "Users group's description"
          },
          "id": {
            "type": "string",
            "description": "Users group's unique identifier"
          },
          "institutionId": {
            "type": "string",
            "description": "Users group's institutionId"
          },
          "members": {
            "type": "array",
            "description": "List of all the members of the group",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "modifiedAt": {
            "type": "string",
            "description": "Date on which the group was modified",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "description": "User by which the group was modified"
          },
          "name": {
            "type": "string",
            "description": "Users group's name"
          },
          "productId": {
            "type": "string",
            "description": "Users group's productId"
          },
          "status": {
            "type": "string",
            "description": "Users group's status",
            "enum": [
              "ACTIVE",
              "SUSPENDED"
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725)",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}